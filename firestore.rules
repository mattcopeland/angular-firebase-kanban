rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function getProjectRole(userId, projectId) {
      return get(/databases/$(database)/documents/projects/$(projectId)/users/$(userId)).data.role;
    }

    function isAuthenticated() {
      return request.auth != null;
    }

    match /users/{userId} {
     allow read, write: if request.auth.uid == userId;
    }

    match /projects/{project} {
      allow read, write: if isAuthenticated();

      match /users/{user} {
        allow read, write: if isAuthenticated();
      }

      match /tasks/{task} {
      	allow read: if true;
        allow create: if isAuthenticated() && exists(/databases/$(database)/documents/users/$(request.auth.uid))
        allow write: if isAuthenticated()
        && request.resource.data.userId == request.auth.uid
        || getProjectRole(request.auth.uid, project) == 'owner'
      }
    }
  }
}